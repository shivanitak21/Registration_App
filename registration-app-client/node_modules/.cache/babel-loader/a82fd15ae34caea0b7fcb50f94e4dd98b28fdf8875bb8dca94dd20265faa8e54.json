{"ast":null,"code":"var _jsxFileName = \"D:\\\\Registration Project\\\\registration-app-client\\\\src\\\\components\\\\RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./RegistrationForm.css\"; // Import the CSS file\nimport Axios from \"axios\"; // Import Axios\nimport { countries, states, cities } from \"./sampleData\"; // Import the sample data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    country: \"\",\n    state: \"\",\n    city: \"\",\n    gender: \"\",\n    dateOfBirth: \"\",\n    age: \"\"\n  });\n\n  // State variables to hold the lists of countries, states, and cities\n  const [countryList, setCountryList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  // Populate the country dropdown with sample data\n  useEffect(() => {\n    setCountryList(countries);\n  }, []);\n\n  // Update the state dropdown based on the selected country\n  useEffect(() => {\n    if (formData.country) {\n      const filteredStates = states.filter(state => state.countryId === parseInt(formData.country));\n      setStateList(filteredStates);\n    } else {\n      setStateList([]);\n    }\n  }, [formData.country]);\n\n  // Update the city dropdown based on the selected state\n  useEffect(() => {\n    if (formData.state) {\n      const filteredCities = cities.filter(city => city.stateId === parseInt(formData.state));\n      setCityList(filteredCities);\n    } else {\n      setCityList([]);\n    }\n  }, [formData.state]);\n  const [age, setAge] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const calculateAge = birthdate => {\n    const today = new Date();\n    const birthDate = new Date(birthdate);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return age;\n  };\n  const handleDateOfBirthChange = e => {\n    const {\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      dateOfBirth: value\n    });\n    const calculatedAge = calculateAge(value);\n    setAge(calculatedAge);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    try {\n      // Send a POST request to your API endpoint\n      const response = await Axios.post(\"http://localhost:6000/register\", formData);\n\n      // Check the response status and handle it accordingly\n      if (response.status === 201) {\n        // Successful submission, you can redirect or show a success message\n        alert(\"Registration successful!\");\n      } else {\n        // Handle any other response status codes or errors\n        console.error(\"Registration failed:\", response.statusText);\n      }\n    } catch (error) {\n      // Handle any network or other errors\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"firstName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"firstName\",\n            value: formData.firstName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"lastName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"lastName\",\n            value: formData.lastName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"E-Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"country\",\n            value: formData.country,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), countryList.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.id,\n              children: country.name\n            }, country.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"state\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"state\",\n            value: formData.state,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), stateList.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: state.id,\n              children: state.name\n            }, state.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"city\",\n            value: formData.city,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), cityList.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city.id,\n              children: city.name\n            }, city.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"gender\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            inline: true,\n            label: \"Male\",\n            name: \"gender\",\n            value: \"male\",\n            checked: formData.gender === \"male\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            inline: true,\n            label: \"Female\",\n            name: \"gender\",\n            value: \"female\",\n            checked: formData.gender === \"female\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"dateOfBirth\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"dateOfBirth\",\n            value: formData.dateOfBirth,\n            onChange: handleDateOfBirthChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"form-group\",\n          controlId: \"age\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"age\",\n            value: age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationForm, \"ZUC7WHC9Gtgto1QwHhjusr31888=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Axios","countries","states","cities","jsxDEV","_jsxDEV","RegistrationForm","_s","formData","setFormData","firstName","lastName","email","country","state","city","gender","dateOfBirth","age","countryList","setCountryList","stateList","setStateList","cityList","setCityList","filteredStates","filter","countryId","parseInt","filteredCities","stateId","setAge","handleChange","e","name","value","target","calculateAge","birthdate","today","Date","birthDate","getFullYear","monthDiff","getMonth","getDate","handleDateOfBirthChange","calculatedAge","handleSubmit","preventDefault","console","log","response","post","status","alert","error","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","onChange","as","map","id","Check","inline","label","checked","variant","_c","$RefreshReg$"],"sources":["D:/Registration Project/registration-app-client/src/components/RegistrationForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./RegistrationForm.css\"; // Import the CSS file\r\nimport Axios from \"axios\"; // Import Axios\r\nimport { countries, states, cities } from \"./sampleData\"; // Import the sample data\r\n\r\nfunction RegistrationForm() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    gender: \"\",\r\n    dateOfBirth: \"\",\r\n    age: \"\"\r\n  });\r\n\r\n  // State variables to hold the lists of countries, states, and cities\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [stateList, setStateList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  // Populate the country dropdown with sample data\r\n  useEffect(() => {\r\n    setCountryList(countries);\r\n  }, []);\r\n\r\n  // Update the state dropdown based on the selected country\r\n  useEffect(() => {\r\n    if (formData.country) {\r\n      const filteredStates = states.filter(\r\n        (state) => state.countryId === parseInt(formData.country)\r\n      );\r\n      setStateList(filteredStates);\r\n    } else {\r\n      setStateList([]);\r\n    }\r\n  }, [formData.country]);\r\n\r\n  // Update the city dropdown based on the selected state\r\n  useEffect(() => {\r\n    if (formData.state) {\r\n      const filteredCities = cities.filter(\r\n        (city) => city.stateId === parseInt(formData.state)\r\n      );\r\n      setCityList(filteredCities);\r\n    } else {\r\n      setCityList([]);\r\n    }\r\n  }, [formData.state]);\r\n\r\n  const [age, setAge] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const calculateAge = (birthdate) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(birthdate);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    if (\r\n      monthDiff < 0 ||\r\n      (monthDiff === 0 && today.getDate() < birthDate.getDate())\r\n    ) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  const handleDateOfBirthChange = (e) => {\r\n    const { value } = e.target;\r\n    setFormData({ ...formData, dateOfBirth: value });\r\n    const calculatedAge = calculateAge(value);\r\n    setAge(calculatedAge);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    try {\r\n      // Send a POST request to your API endpoint\r\n      const response = await Axios.post(\r\n        \"http://localhost:6000/register\",\r\n        formData\r\n      );\r\n\r\n      // Check the response status and handle it accordingly\r\n      if (response.status === 201) {\r\n        // Successful submission, you can redirect or show a success message\r\n        alert(\"Registration successful!\");\r\n      } else {\r\n        // Handle any other response status codes or errors\r\n        console.error(\"Registration failed:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      // Handle any network or other errors\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"form-container\">\r\n        <h2>Registration</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"form-group\" controlId=\"firstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={formData.firstName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"lastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={formData.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"email\">\r\n            <Form.Label>E-Mail</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"country\">\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"country\"\r\n              value={formData.country}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">Select Country</option>\r\n              {countryList.map((country) => (\r\n                <option key={country.id} value={country.id}>\r\n                  {country.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"form-group\" controlId=\"state\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"state\"\r\n              value={formData.state}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">Select State</option>\r\n              {stateList.map((state) => (\r\n                <option key={state.id} value={state.id}>\r\n                  {state.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"city\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"city\"\r\n              value={formData.city}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\">Select City</option>\r\n              {cityList.map((city) => (\r\n                <option key={city.id} value={city.id}>\r\n                  {city.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"gender\">\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              inline\r\n              label=\"Male\"\r\n              name=\"gender\"\r\n              value=\"male\"\r\n              checked={formData.gender === \"male\"}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Check\r\n              type=\"radio\"\r\n              inline\r\n              label=\"Female\"\r\n              name=\"gender\"\r\n              value=\"female\"\r\n              checked={formData.gender === \"female\"}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"dateOfBirth\">\r\n            <Form.Label>Date of Birth</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"dateOfBirth\"\r\n              value={formData.dateOfBirth}\r\n              onChange={handleDateOfBirthChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"form-group\" controlId=\"age\">\r\n            <Form.Label>Age</Form.Label>\r\n            <Form.Control type=\"text\" name=\"age\" value={age}  />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\" className=\"btn-primary\">\r\n            Save\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}